Script started on 2022-02-18 13:18:15-05:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="80" LINES="24"]
]0;hs59@gold14: ~/cs214/lab/02[01;32mhs59@gold14[00m:[01;34m~/cs214/lab/02[00m$ flex example            cat exsaa   anok   mple6.lke  ex
%{
#include <stdio.h>
#include <stdlib.h>           /* atoi() */
#include <string.h>           /* strcmp() */
#include "example6.tab.h"
%}
%%
[0-9]+                  yylval = atoi(yytext); return NUMBER;
heat                    return TOKHEAT;
on|off                  yylval = !strcmp(yytext,"on"); return STATE;
set                     return TOKSET;
temperature             return TOKTEMPERATURE;
humidity                return TOKHUMIDITY;
\n                      /* ignore end of line */;
[ \t]+                  /* ignore whitespace */;
%%]0;hs59@gold14: ~/cs214/lab/02[01;32mhs59@gold14[00m:[01;34m~/cs214/lab/02[00m$ cat example6.y
%{
#include <stdio.h>
#include <string.h>

/* declarations */
int yylex (void);
void yyerror (char const *);
int yyparse(void);

/* definitions */ 
void yyerror(const char *str) {
        fprintf(stderr,"error: %s\n",str);
}
 
int yywrap() {
        return 1;
} 
 
int main() {
        yyparse();
} 

%}

%token NUMBER TOKHEAT STATE TOKSET TOKTEMPERATURE TOKHUMIDITY
%%
commands: /* empty */
        | commands command
        ;

command:
        heat_switch
        | temperature_set
        | humidity_set
        ;

heat_switch:
        TOKHEAT STATE
        {
                if ($2) {  /* if STATE == 1 */
                        printf("\tHeat turned on\n");
                } else {
                        printf("\tHeat turned off\n");
                }
        }
        ;
temperature_set: 
        TOKSET TOKTEMPERATURE NUMBER
        {
                printf("\tTemperature set to %d\n",$3);
        }
        ;
humidity_set:
        TOKSET TOKHUMIDITY NUMBER
        {
                printf("\tHumidity set to %d\n", $3);
        }
        ;]0;hs59@gold14: ~/cs214/lab/02[01;32mhs59@gold14[00m:[01;34m~/cs214/lab/02[00m$ cat example6.ylex[6P./example6[29@gcc lex.yy.c example6.tab.c -o example6[20Pbison -d example6.y[2Pflex example6.lexls[Kflex example6.lex
]0;hs59@gold14: ~/cs214/lab/02[01;32mhs59@gold14[00m:[01;34m~/cs214/lab/02[00m$ flex example6.lex[3Pcat example6.ylex[6P./example6[29@gcc lex.yy.c example6.tab.c -o example6[20Pbison -d example6.y
]0;hs59@gold14: ~/cs214/lab/02[01;32mhs59@gold14[00m:[01;34m~/cs214/lab/02[00m$ bison -d example6.y[2Pflex example6.lex[3Pcat example6.ylex[6P./example6[29@gcc lex.yy.c example6.tab.c -o example6
]0;hs59@gold14: ~/cs214/lab/02[01;32mhs59@gold14[00m:[01;34m~/cs214/lab/02[00m$ ./example6
set humidity to 45
to	Humidity set to 45
set temperature to 20
to	Temperature set to 20
heat on
	Heat turned on
heat off
	Heat turned off
^C
]0;hs59@gold14: ~/cs214/lab/02[01;32mhs59@gold14[00m:[01;34m~/cs214/lab/02[00m$ exit

Script done on 2022-02-18 13:19:53-05:00 [COMMAND_EXIT_CODE="130"]
At the line 693 in the example1, I can see that it's looping that has 2 layered array, x[y[z]] and also it is interesting that it is using int type for yy_def. In the line 741 - 770, it shows the termination part of the program.
In the example2, when the input is number it printes the NUMBER, and when the input is a character it prints WORD. When it is number then word it prints both NUMBER and WORD but when it is word then number it only prints WORD. When is underscore, it just prints as mirror to the next line, it replicates it right in front of number and words are added. 
In the example4, the differentiates a terminal from a non-terminal is | and {}.
I do not see anything strange in example4.
